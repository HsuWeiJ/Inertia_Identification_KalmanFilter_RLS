TMS320C2000 Assembler PC v20.2.5 Thu Feb  2 17:03:33 2023

Copyright (c) 1996-2018 Texas Instruments Incorporated
../vector/mpy_SP_RVxRV_2.asm                                         PAGE    1

       1              ;;#############################################################################
       2              ;;! \file source/vector/mpy_SP_RVxRV_2.asm
       3              ;;!
       4              ;;! \brief  C-Callable multiplication of a real vector and a real vector
       5              ;;! \author David M. Alter
       6              ;;! \date   07/15/11
       7              ;;
       8              ;; HISTORY:
       9              ;;    - original (D. Alter)
      10              ;;
      11              ;; DESCRIPTION: C-Callable multiplication of a real vector and a real vector
      12              ;;              y[i] = w[i]*x[i]
      13              ;;
      14              ;; FUNCTION: 
      15              ;;   extern void mpy_SP_RVxRV_2(float32 *y, const float32 *w, const float32 *x, 
      16              ;;                              const Uint16 N)
      17              ;;
      18              ;; USAGE:       mpy_SP_RVxRV_2(y, w, x, N);
      19              ;;
      20              ;; PARAMETERS:  float32 *y = result real array
      21              ;;              float32 *w = input real array #1
      22              ;;              float32 *x  = input real array #2
      23              ;;              Uint16 N = length of w, x and y arrays
      24              ;;
      25              ;; RETURNS:     none
      26              ;;
      27              ;; BENCHMARK:   3*N + 17 cycles (including the call and return)
      28              ;;
      29              ;; NOTES:
      30              ;;   1) N must be even and at least 4.
      31              ;;
      32              ;;  Group:            C2000
      33              ;;  Target Family:    C28x+FPU32
      34              ;;
      35              ;;#############################################################################
      36              ;;
      37              ;;
      38              ;; $Copyright: Copyright (C) 2022 Texas Instruments Incorporated -
      39              ;;             http://www.ti.com/ ALL RIGHTS RESERVED $
      40              ;;#############################################################################
      41                      .if __TI_EABI__
      42                      .asg mpy_SP_RVxRV_2, _mpy_SP_RVxRV_2
      43                      .endif
      44                  
      45                      .global _mpy_SP_RVxRV_2
      46 00000000               .text
      47 00000000       _mpy_SP_RVxRV_2:
      48 00000000 C444          MOVL        XAR6, *-SP[4]    ;XAR6 = &x
      49 00000001 FFC0          LSR         AL, #1           ;divide N by 2
      50 00000002 9CFE          ADDB        AL, #-2          ;subtract 2 from N since RPTB is 'n-1' 
      51                                                   ;times and last iteration done separately
      52                                                   
      53 00000003 E2AF          MOV32       R0H, *XAR5++     ;load first w
         00000004 0085 
      54 00000005 E2AF          MOV32       R1H, *XAR6++     ;load first x
TMS320C2000 Assembler PC v20.2.5 Thu Feb  2 17:03:33 2023

Copyright (c) 1996-2018 Texas Instruments Incorporated
../vector/mpy_SP_RVxRV_2.asm                                         PAGE    2

         00000006 0186 
      55                                                   
      56              ;---Main loop                        
      57 00000007 B50C          RPTB        end_loop, @AL    
         00000008 00A9 
      58                                                   
      59 00000009 E302          MPYF32       R2H, R0H, R1H   ;y[i] = w[i]*x[i]
         0000000a 1085 
      60                      || MOV32     R0H, *XAR5++    ;load next w
      61 0000000b E2AF          MOV32        R1H, *XAR6++    ;load next x
         0000000c 0186 
      62 0000000d E203          MOV32        *XAR4++, R2H    ;store y[i]
         0000000e 0284 
      63                                                   
      64 0000000f E302          MPYF32       R2H, R0H, R1H   ;y[i] = w[i]*x[i]
         00000010 1085 
      65                      || MOV32     R0H, *XAR5++    ;load next w
      66 00000011 E2AF          MOV32        R1H, *XAR6++    ;load next x
         00000012 0186 
      67 00000013 E203          MOV32        *XAR4++, R2H    ;store y[i]
         00000014 0284 
      68              
      69 00000015       end_loop:
      70              
      71              ;--- Last iteration done seperately to avoid possible pointer overrun into 
      72              ;    undefined memory
      73 00000015 E302          MPYF32       R2H, R0H, R1H   ;y[i] = w[i]*x[i]
         00000016 1085 
      74                      || MOV32     R0H, *XAR5++    ;load next w
      75 00000017 E2AF          MOV32        R1H, *XAR6++    ;load next x
         00000018 0186 
      76 00000019 E203          MOV32        *XAR4++, R2H    ;store y[i]
         0000001a 0284 
      77                                                   
      78 0000001b E700          MPYF32       R2H, R0H, R1H   ;y[i] = w[i]*x[i]
         0000001c 0042 
      79 0000001d 7700          NOP                          ;delay slot
      80 0000001e E203          MOV32        *XAR4++, R2H    ;store y[i]
         0000001f 0284 
      81                                                   
      82              ;Finish up                           
      83 00000020 0006          LRETR                        ;return
      84                                                   
      85              ;end of function _mpy_SP_RVxRV_2()
      86              ;*********************************************************************
      87              
      88                     .end

No Assembly Errors, No Assembly Warnings
